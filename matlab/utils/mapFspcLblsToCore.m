function out = mapFspcLblsToCore(inFspcLbl,varargin)

    % fetch optional arguments
    fixedArgs = 1;
    if nargin >= fixedArgs+1
        for ii = fixedArgs+1:2:nargin
            switch varargin{ii-fixedArgs}
                case 'direction'
                    direction = varargin{ii-(fixedArgs-1)};
            end
        end
    end
    
    if ~exist('direction','var'); direction = 'label2core'; end


    coreFspcs = {'pixelPCA_od_WAng','shape','texture', ...
        'triplet','netID_{9.5}','netMulti_{9.5}','AE','viAE10','\beta=1 VAE', ...
        '\delta_{pixelPCAwAng}','\delta_{shapeCoeff}','\delta_{texCoeff}','\delta_{triplet}', ...
            '\delta_{netID}','\delta_{netMulti}','\delta_{ae}','\delta_{viAE10}','\delta_{\beta=1 VAE}', ...
        '\delta_{pixelPCAwAngWise}','\delta_{shapeCoeffWise}','\delta_{texCoeffWise}', ...
        '\delta_{tripletWise}','\delta_{netIDWise}','\delta_{netMultiWise}','\delta_{aeWise}','\delta_{viAE10Wise}', ...
            '\delta_{\beta=1 VAEWise}',  ...
        'netID','netMulti','VAE_{dn0}','VAE_{dn2}'};

    fspcLabels = {'pixelPCA_od_WAng','shape','texture','shape&texture','shape&pixelPCAwAng', ...
        'triplet','netID_{9.5}','netMulti_{9.5}','AE','viAE10','\beta=1 VAE','\beta=10 VAE', ...
        'shape&AE','shape&viAE10','shape&\beta=1-VAE','shape&netMulti_{9.5}&\beta=1-VAE','shape&texture&AE','shape&texture&viAE10', ...
        '\delta_{pixelPCAwAng}','\delta_{shapeCoeff}','\delta_{texCoeff}','\delta_{triplet}','\delta_{netID}','\delta_{netMulti}', ...
            '\delta_{ae}','\delta_{viAE10}','\delta_{\beta=1 VAE}', ...
        '\delta_{vertex}','\delta_{pixel}', ...
        '\delta_{pixelPCAwAngWise}','\delta_{shapeCoeffWise}','\delta_{texCoeffWise}', ...
        '\delta_{tripletWise}','\delta_{netIDWise}','\delta_{netMultiWise}','\delta_{aeWise}','\delta_{viAE10Wise}', ...
            '\delta_{\beta=1 VAEWise}',  ...
        'netID','netMulti','VAE_{dn0}','VAE_{dn2}'};

    fspcLblTxts = {'pixelPCA','Shape','Texture','Shape&Texture','Shape&pixelPCA', ...
        'Triplet_{emb}','ClassID_{emb}','ClassMulti_{emb}','AE_{emb}','viAE_{emb}','VAE_{emb}','\beta=10-VAE_{emb}', ...
        'Shape&AE_{emb}','Shape&viAE_{emb}','Shape&VAE_{emb}','Shape&ClassMulti_{emb}&VAE','Shape&Texture&AE_{emb}','Shape&Texture&viAE_{emb}', ...
        'pixelPCA_{\delta}','Shape_{\delta}','Texture_{\delta}','Triplet_{\delta}','ClassID_{\delta}','ClassMulti_{\delta}','AE_{\delta}','viAE_{\delta}','VAE_{\delta}', ...
        'ShapeVertex_{\delta}','TexturePixel_{\delta}', ...
        'pixelPCA_{\delta-lincomb}','Shape_{\delta-lincomb}','Texture_{\delta-lincomb}','Triplet_{\delta-lincomb}', ...
            'ClassID_{\delta-lincomb}','ClassMulti_{\delta-lincomb}','AE_{\delta-lincomb}', ...
            'viAE_{\delta-lincomb}','VAE_{\delta-lincomb}', ...    
        'ClassID_{dn}','ClassMulti_{dn}','VAE_{ldn}','VAE_{nldn}'};

    switch direction
        case 'label2core'
            if sum(strcmp(inFspcLbl,fspcLblTxts)) > 0
                preIdx = find(strcmp(inFspcLbl,fspcLblTxts));
            elseif sum(strcmp(inFspcLbl,fspcLabels)) > 0
                preIdx = find(strcmp(inFspcLbl,fspcLabels));
            else
                preIdx = [];
            end

            if isempty(preIdx)
                out = [];
            else
                out = find(strcmp(fspcLabels(preIdx),coreFspcs));
            end
        case 'core2label'
            preIdx = find(strcmp(inFspcLbl,fspcLabels));
            out = fspcLblTxts{preIdx};
    end
            
    end